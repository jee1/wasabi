# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import news_pb2 as news__pb2


class NewsStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.getList = channel.unary_stream(
        '/newsProto.News/getList',
        request_serializer=news__pb2.RequestNews.SerializeToString,
        response_deserializer=news__pb2.ResponseNews.FromString,
        )


class NewsServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def getList(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_NewsServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'getList': grpc.unary_stream_rpc_method_handler(
          servicer.getList,
          request_deserializer=news__pb2.RequestNews.FromString,
          response_serializer=news__pb2.ResponseNews.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'newsProto.News', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
